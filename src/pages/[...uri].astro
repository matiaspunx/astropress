---
export const prerender = true

import Layout from "../layouts/Layout.astro"
import Post from "@/components/templates/Post.astro"
import Page from "@/components/templates/Page.astro"
import Archive from "@/components/templates/Archive.astro"

import { wpAPI } from "@/lib/api"

const { uri } = Astro.params

const url: string = `/${uri}/`

// obtenemos el post de la url
const data = await wpAPI({
  query: `query {
    nodeByUri(uri: "${url}") {
      __typename
      isContentNode
      isTermNode
    ... on Post {
      id
      content(format: RENDERED)
      title(format: RENDERED)
      uri
      date
      categories {
        nodes {
          id
          slug
          name
          uri
        }
      }
      featuredImage {
        node {
          mediaItemUrl
          sourceUrl(size: LARGE)
          srcSet(size: LARGE)
        }
      }
    }
    ... on Page {
      id
      content(format: RENDERED)
      title(format: RENDERED)
      uri
      featuredImage {
        node {
          mediaItemUrl
          sourceUrl(size: LARGE)
          srcSet(size: LARGE)
        }
      }
    }
    ... on Category {
      id
      name
      posts {
        nodes {
          featuredImage {
            node {
              mediaItemUrl
            }
          }
          uri
          title(format: RENDERED)
        }
      }
    }
    isContentNode
    isTermNode
    uri
  }
  }`,
  variables: {
    uri: url
  }
})

const node = data.nodeByUri
if (!node.excerpt) node.excerpt = ""

export async function getStaticPaths() {
  return await wpAPI({
    query: `query GetAllUris {
            terms {
              nodes {
                uri
              }
            }
            posts(first: 100) {
              nodes {
                uri
              }
            }
            pages(first: 100) {
              nodes {
                uri
              }
            }
          }`,
    strategy: "uris"
  })
}

function resolveContentTemplate(node: { __typename: any }) {
  let template
  switch (node.__typename) {
    case "Post":
      template = Post
      break
    case "Page":
      template = Page
      break
    case "Category":
      template = Archive
      break
    case "Tag":
      template = Archive
      break
    default:
      template = Post
  }

  return template
}

const Template = resolveContentTemplate(node)
---

<Layout title={node.title} description="Astropress es un punto de partida para crear sitios web con Astro y WordPress.">
  <Template node={node} />
</Layout>
